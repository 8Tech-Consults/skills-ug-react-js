var h=Object.defineProperty;var d=(o,e,r)=>e in o?h(o,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[e]=r;var c=(o,e,r)=>d(o,typeof e!="symbol"?e+"":e,r);import{bh as a}from"./index-DYlhEq0c.js";const g="http://127.0.0.1:8000/api";class p{constructor(){c(this,"baseURL",g)}getAuthHeaders(){const e=localStorage.getItem("auth_token");return{Authorization:e?`Bearer ${e}`:"","Content-Type":"application/json",Accept:"application/json"}}handleError(e){var r,n,t,s;return(n=(r=e.response)==null?void 0:r.data)!=null&&n.message?e.response.data.message:(s=(t=e.response)==null?void 0:t.data)!=null&&s.error?e.response.data.error:e.message?e.message:"An unexpected error occurred"}async getServices(e={}){try{const r=new URLSearchParams;return Object.entries(e).forEach(([t,s])=>{s!=null&&s!==""&&r.append(t,s.toString())}),(await a.get(`${this.baseURL}/services?${r.toString()}`,{headers:this.getAuthHeaders()})).data}catch(r){return{success:!1,message:this.handleError(r),error:this.handleError(r)}}}async getService(e){try{return(await a.get(`${this.baseURL}/services/${e}`,{headers:this.getAuthHeaders()})).data}catch(r){return{success:!1,message:this.handleError(r),error:this.handleError(r)}}}async createService(e){try{const r=new FormData;return Object.entries(e).forEach(([t,s])=>{t!=="images"&&(t==="tags"&&Array.isArray(s)?r.append(t,JSON.stringify(s)):s!=null&&r.append(t,s.toString()))}),e.images&&e.images.length>0&&e.images.forEach((t,s)=>{r.append(`images[${s}]`,t)}),(await a.post(`${this.baseURL}/service-create`,r,{headers:{...this.getAuthHeaders(),"Content-Type":"multipart/form-data"}})).data}catch(r){return{success:!1,message:this.handleError(r),error:this.handleError(r)}}}async updateService(e){try{const r=new FormData;return r.append("_method","PUT"),Object.entries(e).forEach(([t,s])=>{t!=="images"&&(t==="tags"&&Array.isArray(s)?r.append(t,JSON.stringify(s)):s!=null&&r.append(t,s.toString()))}),e.images&&e.images.length>0&&e.images.forEach((t,s)=>{r.append(`images[${s}]`,t)}),(await a.post(`${this.baseURL}/services/${e.id}`,r,{headers:{...this.getAuthHeaders(),"Content-Type":"multipart/form-data"}})).data}catch(r){return{success:!1,message:this.handleError(r),error:this.handleError(r)}}}async deleteService(e){try{return(await a.delete(`${this.baseURL}/services/${e}`,{headers:this.getAuthHeaders()})).data}catch(r){return{success:!1,message:this.handleError(r),error:this.handleError(r)}}}async getServiceCategories(){try{return(await a.get(`${this.baseURL}/service-categories`,{headers:this.getAuthHeaders()})).data}catch(e){return{success:!1,message:this.handleError(e),error:this.handleError(e)}}}async checkBookmark(e){try{return(await a.get(`${this.baseURL}/services/${e}/bookmark/check`,{headers:this.getAuthHeaders()})).data}catch{return{bookmarked:!1}}}async toggleBookmark(e){try{return(await a.post(`${this.baseURL}/services/${e}/bookmark/toggle`,{},{headers:this.getAuthHeaders()})).data}catch(r){return{success:!1,message:this.handleError(r),error:this.handleError(r)}}}async getBookmarkedServices(){try{return(await a.get(`${this.baseURL}/bookmarks`,{headers:this.getAuthHeaders()})).data}catch(e){return{success:!1,message:this.handleError(e),error:this.handleError(e)}}}async getServiceReviews(e){try{return(await a.get(`${this.baseURL}/services/${e}/reviews`,{headers:this.getAuthHeaders()})).data}catch(r){return{success:!1,error:this.handleError(r)}}}async addServiceReview(e,r){try{const n=new FormData;return Object.entries(r).forEach(([s,i])=>{s!=="images"&&i!=null&&n.append(s,i.toString())}),r.images&&r.images.length>0&&r.images.forEach((s,i)=>{n.append(`images[${i}]`,s)}),(await a.post(`${this.baseURL}/services/${e}/reviews`,n,{headers:{...this.getAuthHeaders(),"Content-Type":"multipart/form-data"}})).data}catch(n){return{success:!1,message:this.handleError(n),error:this.handleError(n)}}}async createServiceBooking(e){try{return(await a.post(`${this.baseURL}/service-bookings`,e,{headers:this.getAuthHeaders()})).data}catch(r){return{success:!1,message:this.handleError(r),error:this.handleError(r)}}}async getUserServiceBookings(){try{return(await a.get(`${this.baseURL}/my-service-bookings`,{headers:this.getAuthHeaders()})).data}catch(e){return{success:!1,error:this.handleError(e)}}}async getServiceStats(){try{return(await a.get(`${this.baseURL}/service-stats`,{headers:this.getAuthHeaders()})).data}catch(e){return{success:!1,error:this.handleError(e)}}}async getFeaturedServices(e=10){try{return(await a.get(`${this.baseURL}/services?is_featured=1&limit=${e}`,{headers:this.getAuthHeaders()})).data}catch(r){return{success:!1,message:this.handleError(r),error:this.handleError(r)}}}async searchServices(e,r={}){return this.getServices({...r,search:e})}}const l=new p;export{l as s};
